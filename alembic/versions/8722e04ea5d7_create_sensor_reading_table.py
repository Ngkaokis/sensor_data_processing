"""create_sensor_reading_table

Revision ID: 8722e04ea5d7
Revises: d919e3244665
Create Date: 2024-06-16 03:28:28.408409

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8722e04ea5d7'
down_revision: Union[str, None] = 'd919e3244665'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensor_reading',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False, start=1001), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=False),
    sa.Column('sensor_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['sensor_id'], ['public.sensor.id'], name=op.f('fk_sensor_reading_sensor_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sensor_reading')),
    sa.UniqueConstraint('sensor_id', 'timestamp', name='uq_sensor_reading_sensor_id_timestamp'),
    schema='public'
    )
    op.create_index(op.f('ix_sensor_reading_sensor_id'), 'sensor_reading', ['sensor_id'], unique=False, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sensor_reading_sensor_id'), table_name='sensor_reading', schema='public')
    op.drop_table('sensor_reading', schema='public')
    # ### end Alembic commands ###
